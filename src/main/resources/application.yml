http:
   proxy: http://webproxy-nais.nav.no:8088
no.nav:
   security:
      oidc:
         issuers: selvbetjening
dokarkiv:
  enabled: true
sts:
  enabled: true           
historikk:
   oppslag:
      enabled: true
   kafka:
      meldinger:
         topic: fpinfo-historikk
         søknad_topic: fpsoknad-mottak
info:
   app:
      version: '@project.version@'
      build:
         time: '@timestamp@'
management:
   metrics:
      web:
         server:
            auto-time-requests: true
   endpoints:
      web:
         exposure:
            include: info, health, metrics, prometheus
   health:
      refresh:
         enabled: false
      diskspace:
         enabled: false
resilience4j:
   retry:
      configs:
         default:
            maxRetryAttempts: 2
            waitDuration: 100
            retryExceptions:
            - org.springframework.web.client.HttpServerErrorException
            - java.io.IOException
      instances:
         dokarkiv:
            maxRetryAttempts: 3
server:
   servlet:
      context-path: /api
   use-forward-headers: true
spring:
   application:
      name: fpinfo-historikk
   cache:
      cache-names: aktør,sts
      caffeine:
         spec: maximumSize=100,expireAfterAccess=3600s
   datasource:
      url: jdbc:postgresql://A01DBVL010.adeo.no:5432/fpinfo-historikk-prod
      hikari:
         maximum-pool-size: 2
   flyway:
      baselineOnMigrate: false
      enabled: true
   jackson:
      default-property-inclusion: non-absent
      mapper:
         accept-case-insensitive-properties: true
      deserialization:
         accept-single-value-as-array: true
         fail-on-unknown-properties: true
      serialization:
         write-empty-json-arrays: false
         fail-on-empty-beans: false
   jpa:
      hibernate:
         ddl-auto: none
   kafka:
      properties:
         security:
            protocol: SASL_SSL
         sasl:
            mechanism: PLAIN
            jaas:
               config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka.username} password=${kafka.password};
      consumer:
         enable-auto-commit: false
         bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
         group-id: group_id
         auto-offset-reset: earliest
         key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
         value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      producer:
         bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
         key-serializer: org.apache.kafka.common.serialization.StringSerializer
         value-serializer: org.apache.kafka.common.serialization.StringSerializer
         transaction-id-prefix: tx.
   main:
      banner-mode: 'off'