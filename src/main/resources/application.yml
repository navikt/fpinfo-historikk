no.nav:
  security:
    jwt:
      dont-propagate-bearertoken: true
      client:
        registration:
          fpsoknad-mottak:
            well-known-url: ${token.x.well.known.url}
            grant-type: urn:ietf:params:oauth:grant-type:token-exchange
            token-exchange:
              audience: prod-fss:teamforeldrepenger:fpsoknad-mottak
            authentication:
              client-id: ${token.x.client.id}
              client-jwk: ${token.x.private.jwk}
              client-auth-method: private_key_jwt
      issuer:
        tokenx:
          discovery-url: ${token.x.well.known.url}
          accepted-audience: ${token.x.client.id}

historikk:
  dittnav:
    enabled: true
    topics:
      beskjed: min-side.aapen-brukernotifikasjon-beskjed-v1
      oppgave: min-side.aapen-brukernotifikasjon-oppgave-v1
      done: min-side.aapen-brukernotifikasjon-done-v1
  inntektsmelding:
    enabled: true
    topic: privat-foreldrepenger-brukerdialog-inntektsmelding
    group-id: group-id
  innsending:
    søknad:
      enabled: true
      topic: fpsoknad-mottak
      group-id: group-id
    fordeling:
      enabled: true
      topic: privat-foreldrepenger-historikk-fordeling
      group-id: fordeling
  tilbakekreving:
    enabled: true
    topic: privat-tilbakekreving-brukerdialog-p
    group-id: group-id
management:
  metrics:
    web:
      server:
        request:
          autotime:
            enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus
  health:
    refresh:
      enabled: false
    diskspace:
      enabled: false
  endpoint:
    health:
      group:
        liveiness:
          include: db
      show-details: never
server:
  servlet:
    context-path: /api
  forward-headers-strategy: framework
spring:
  application:
    name: fpinfo-historikk
  cache:
    cache-names: aktør,sts,organisasjon,fnr
    caffeine:
      spec: maximumSize=100,expireAfterAccess=3600s
  cloud:
    discovery:
      client:
        health-indicator:
          enabled: false
  datasource:
    validation-query: SELECT 1
    url: jdbc:postgresql://A01DBVL010.adeo.no:5432/fpinfo-historikk-prod
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 2
  flyway:
    baselineOnMigrate: false
    enabled: true
  jpa:
    hibernate:
      ddl-auto: none
  main:
    banner-mode: 'off'
kafka:
  aiven:
    bootstrap-servers: ${kafka.brokers}
    ca: ${kafka.ca}
    ca-path: ${kafka.ca.path}
    certificate: ${kafka.certificate}
    certificate-path: ${kafka.certificate.path}
    credstore-password: ${kafka.credstore.password}
    keystore-path: ${kafka.keystore.path}
    private-key: ${kafka.private.key}
    private-key-path: ${kafka.private.key.path}
    schema-registry-uri: ${kafka.schema.registry}
    schema-registry-user-info: ${kafka.schema.registry.user}:${kafka.schema.registry.password}
    truststore-path: ${kafka.truststore.path}
    security-protocol: SSL
    sasl-mechanism: PLAIN
    key-store-type: PKCS12
    truststore-type: jks
    key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  onprem:
    sasl-mechanism: PLAIN
    security-protocol-config: SASL_SSL
    jaas-config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${system.username} password=${system.password};
    consumer-enable-auto-commit: false
    bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
    auto-offset-reset: none
    transactional-id-prefix: ${hostname}
springdoc:
  packages-to-scan: no.nav.foreldrepenger.historikk
  swagger-ui:
    disable-swagger-default-url: true
