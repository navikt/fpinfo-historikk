version: 2.1
orbs:
  nais: navikt/nais-deployment@1.5.0
  slack: circleci/slack@3.3.0
  env: christeredvartsen/persist-env@0.0.4
  
executors:
  openjdk:
    working_directory: ~/fpinfo-historikk
    docker:
      - image: circleci/openjdk:11-jdk
    environment:
      MAJOR_VERSION: 2   
  go:
    docker:
      - image: navikt/deployment-cli:v0.2.0  
jobs:
   build:
     executor: openjdk
     steps:
       - checkout   
       - env/set-env-var:
          var-name: RELEASE_VERSION
          var-value: $MAJOR_VERSION-$CIRCLE_BUILD_NUM-$(git rev-parse --short HEAD)
       - env/set-env-var:
          var-name: REPO
          var-value: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
       - env/set-env-var:
          var-name: IMAGE
          var-value: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME
       
      
       - restore_cache: 
          name: Hente cache 
          key: fpinfo-historikk-{{ checksum "pom.xml" }}
      
       - run:
          name: Lagre avhengigheter  
          command : mvn dependency:go-offline
      
       - save_cache:
          paths:
            - ~/.m2
          key: fpinfo-historikk-{{ checksum "pom.xml" }}
          
       - run :
          name : Set maven versjon
          command : mvn versions:set -B -DnewVersion=$RELEASE_VERSION 
       - run: 
          name: Bygge 
          command: mvn -Dsonar.projectKey=navikt_$CIRCLE_PROJECT_REPONAME -Dsonar.organization=navit -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR clean package sonar:sonar 
          
       - run :
          name : Revert maven versjon
          command :  mvn versions:revert
          
       - run:
           name: Flytte testresultater
           command: |
             mkdir -p ~/test-results/junit/
             find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
           when: always

       - store_test_results:
          path: ~/test-results

       - store_artifacts:
          path: ~/test-results/junit  
          
       - nais/docker-deploy:
          registry: docker.pkg.github.com
          image: $IMAGE
          tag: $RELEASE_VERSION

       - env/persist-env 
        
   dev-deploy:
     executor: go
     steps:
      - nais-deploy:
          template-vars: dev.json
          environment: dev-fss

   prod-deploy:
     executor: go
     steps:
      - nais-deploy:
          template-vars: prod.json
          environment: prod-fss

commands:
  nais-deploy:
    parameters:
      template-vars:
        type: string
      environment:
        type: string
    steps:
      - env/attach-env
      - checkout
      - nais/generate-nais-deployment:
          repo: $REPO
          nais-template: naiserator.yaml
          team: teamforeldrepenger
          github-app-id: 20250
          image: docker.pkg.github.com/$IMAGE
          tag: $RELEASE_VERSION
          environment: << parameters.environment >>
          enable-vars: true
          template-vars: << parameters.template-vars >>
          
workflows:
   version: 2
   deploy-nais:
     jobs:
      - build:
          context: familie-ci 
      - dev-deploy:
          context: NAIS deployment
          filters:
            branches:
              only: master
          requires:
            - build

      - hold:
          type: approval
          filters:
            branches:
              only: master
          requires:
            - dev-deploy

      - slack/approval-notification:
          webhook: $SLACK
          message: "Godkjenn deploy til prod av $CIRCLE_PROJECT_REPONAME"
          url: https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_WORKSPACE_ID
          requires:
            - dev-deploy

      - prod-deploy:
          context: NAIS deployment
          filters:
            branches:
              only: master
          requires:
            - hold
